import sys
import os

# Garante que a sa√≠da do terminal use UTF-8
sys.stdout.reconfigure(encoding='utf-8')

# Define as pastas base
core_base_path = os.path.join(os.getcwd(), "Content/_Core")
splash_path = os.path.join(os.getcwd(), "Content/Splash")

# Dicion√°rio com descri√ß√µes para os arquivos Guide.txt (Ingl√™s / Portugu√™s)
descriptions = {
    "Art/Materials": ("This folder contains all materials used in the game, including shaders and material instances.",
                      "Esta pasta cont√©m todos os materiais utilizados no jogo, incluindo shaders e inst√¢ncias de materiais."),
    "Art/Textures": ("This folder contains all game textures. Organize them by resolution and type for easy access.",
                     "Aqui ficam todas as texturas do jogo. Organize por resolu√ß√£o e tipo para facilitar o acesso."),
    "Art/Meshes": ("This folder contains all 3D models (static and dynamic) used in the game.",
                   "Esta pasta cont√©m todos os modelos 3D (est√°ticos e din√¢micos) usados no jogo."),
    "Art/Animations": ("Store all character animations, rigs, and montages here.",
                       "Guarde todas as anima√ß√µes de personagens, rigs e montagens nesta pasta."),
    "Art/VFX": ("Visual effects such as sprites, shaders, and particle effects are stored here.",
                "Efeitos visuais, como sprites, shaders e efeitos de part√≠culas, s√£o armazenados aqui."),
    "Audio/Music": ("Background music and soundtracks are stored in this folder.",
                    "Trilhas sonoras e m√∫sicas de fundo do jogo s√£o armazenadas nesta pasta."),
    "Audio/SFX": ("This folder contains sound effects like footsteps, gunshots, and ambient sounds.",
                  "Aqui ficam os efeitos sonoros, como passos, tiros e sons ambientes."),
    "Audio/Voice": ("All voiceover and dialogue files should be stored here.",
                    "Todos os arquivos de dublagem e di√°logos devem ser mantidos aqui."),
    "Blueprints/Core": ("Contains essential Blueprints for the game's core functionality.",
                        "Cont√©m os Blueprints essenciais para a base do jogo."),
    "Blueprints/Gameplay": ("Store Blueprints related to game mechanics here.",
                            "Guarde aqui os Blueprints espec√≠ficos para mec√¢nicas de jogo."),
    "Blueprints/UI": ("Blueprints responsible for the user interface.",
                      "Blueprints respons√°veis pela interface do usu√°rio."),
    "Config": ("Stores game configuration files, such as DefaultGame.ini and Engine.ini.",
               "Armazena arquivos de configura√ß√£o do jogo, como DefaultGame.ini e Engine.ini."),
    "Maps/Main": ("This is the game's main map.",
                  "Este √© o mapa principal do jogo."),
    "Maps/Levels": ("This folder contains secondary maps and additional game levels.",
                    "Mapas secund√°rios e fases adicionais do jogo s√£o armazenados aqui."),
    "Maps/Test": ("Maps used for testing and debugging.",
                  "Mapas usados para testes e depura√ß√£o do jogo."),
    "UI/Widgets": ("All UMG Widgets used for menus and HUD are stored here.",
                   "Todos os Widgets UMG usados para menus e HUD ficam aqui."),
    "UI/Icons": ("Icons used in the game interface should be organized here.",
                 "√çcones usados na interface do jogo devem ser organizados aqui."),
    "Data/DataTables": ("This folder contains Data Tables used to store structured game data.",
                        "Esta pasta cont√©m Data Tables usadas para armazenar dados estruturados do jogo."),
    "Data/Enums": ("This folder contains all Enums used in the game.",
                   "Aqui ficam os arquivos Enum utilizados no jogo."),
    "Data/Structures": ("UE Structs used to store complex data are kept here.",
                        "Structs do Unreal usadas para armazenar dados complexos s√£o mantidas aqui."),
    "Code/Core": ("Core C++ files essential to the game engine.",
                  "Arquivos C++ essenciais para o n√∫cleo do jogo."),
    "Code/Gameplay": ("C++ scripts related to gameplay mechanics.",
                      "Scripts de C++ relacionados √† jogabilidade do jogo."),
    "Code/AI": ("AI logic written in C++.",
                "L√≥gica de Intelig√™ncia Artificial escrita em C++."),
    "Code/UI": ("C++ code responsible for UI interactions.",
                "C√≥digo C++ respons√°vel pela interface gr√°fica."),
    "Cinematics": ("Stores all cutscenes and cinematics sequences.",
                   "Armazena todas as sequ√™ncias cinematogr√°ficas e cutscenes."),
    "FX/Niagara": ("Particle effects created with the Niagara system.",
                   "Efeitos de part√≠culas criados com o sistema Niagara."),
    "FX/Particles": ("Standard Unreal Engine particles.",
                     "Part√≠culas convencionais do Unreal Engine."),
    "Shaders": ("All custom shaders for the game are stored here.",
                "Todos os shaders personalizados para o jogo s√£o mantidos aqui."),
    "ThirdParty": ("Plugins and third-party libraries should be stored here.",
                   "Plugins e bibliotecas de terceiros devem ser armazenados aqui."),
    "Inputs/InputActions": ("This folder contains Input Action assets used to define player input mappings in Unreal Engine. It is essential for handling keybindings, gamepad controls, and other input interactions.",
                   "Esta pasta cont√©m os ativos de Input Action usados para definir os mapeamentos de entrada do jogador no Unreal Engine. √â essencial para gerenciar teclas de atalho, controles de gamepad e outras intera√ß√µes de entrada."),
    "Documents": ("Project documentation, diagrams, and important notes.",
                  "Documenta√ß√£o do projeto, diagramas e anota√ß√µes importantes.")
}

# Criando as pastas dentro de "Content/_Core" e adicionando os arquivos Guide.txt
for folder, description in descriptions.items():
    full_path = os.path.join(core_base_path, folder)
    guide_path = os.path.join(full_path, "Guide.txt")
    
    # Criando a pasta se n√£o existir
    if not os.path.exists(full_path):
        os.makedirs(full_path)
        print(f"üìÅ Criado: {full_path}")
    else:
        print(f"‚úÖ J√° existe: {full_path}")

    # Criando ou sobrescrevendo Guide.txt com descri√ß√µes em ingl√™s e portugu√™s
    with open(guide_path, "w", encoding="utf-8") as guide_file:
        guide_file.write(f"{description[0]}\n{description[1]}")
        print(f"üìÑ Guide.txt criado em: {guide_path}")

# Criando a pasta "Content/Splash" separadamente
if not os.path.exists(splash_path):
    os.makedirs(splash_path)
    print(f"üìÅ Criado: {splash_path}")
else:
    print(f"‚úÖ J√° existe: {splash_path}")

# Criando um Guide.txt dentro de Splash
splash_guide_path = os.path.join(splash_path, "Guide.txt")
with open(splash_guide_path, "w", encoding="utf-8") as splash_guide_file:
    splash_guide_file.write("This folder contains the game's Splash Screen assets.\nEsta pasta cont√©m as telas de Splash Screen do jogo.")
    print(f"üìÑ Guide.txt criado em: {splash_guide_path}")

print("üéÆ Estrutura de pastas criada com sucesso dentro de Content!")
